#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FORMAPP2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Galenskap")]
	public partial class LTSTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGalningar(Galningar instance);
    partial void UpdateGalningar(Galningar instance);
    partial void DeleteGalningar(Galningar instance);
    #endregion
		
		public LTSTDataContext() : 
				base(global::FORMAPP2.Properties.Settings.Default.GalenskapConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LTSTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LTSTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LTSTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LTSTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Galningar> Galningars
		{
			get
			{
				return this.GetTable<Galningar>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Galningar")]
	public partial class Galningar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Galning_ID;
		
		private string _Galning_Name;
		
		private string _Born;
		
		private string _From_Location;
		
		private string _Info;
		
		private System.Nullable<int> _Galenskap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGalning_IDChanging(int value);
    partial void OnGalning_IDChanged();
    partial void OnGalning_NameChanging(string value);
    partial void OnGalning_NameChanged();
    partial void OnBornChanging(string value);
    partial void OnBornChanged();
    partial void OnFrom_LocationChanging(string value);
    partial void OnFrom_LocationChanged();
    partial void OnInfoChanging(string value);
    partial void OnInfoChanged();
    partial void OnGalenskapChanging(System.Nullable<int> value);
    partial void OnGalenskapChanged();
    #endregion
		
		public Galningar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Galning_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Galning_ID
		{
			get
			{
				return this._Galning_ID;
			}
			set
			{
				if ((this._Galning_ID != value))
				{
					this.OnGalning_IDChanging(value);
					this.SendPropertyChanging();
					this._Galning_ID = value;
					this.SendPropertyChanged("Galning_ID");
					this.OnGalning_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Galning_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Galning_Name
		{
			get
			{
				return this._Galning_Name;
			}
			set
			{
				if ((this._Galning_Name != value))
				{
					this.OnGalning_NameChanging(value);
					this.SendPropertyChanging();
					this._Galning_Name = value;
					this.SendPropertyChanged("Galning_Name");
					this.OnGalning_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Born", DbType="VarChar(255)")]
		public string Born
		{
			get
			{
				return this._Born;
			}
			set
			{
				if ((this._Born != value))
				{
					this.OnBornChanging(value);
					this.SendPropertyChanging();
					this._Born = value;
					this.SendPropertyChanged("Born");
					this.OnBornChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_From_Location", DbType="VarChar(255)")]
		public string From_Location
		{
			get
			{
				return this._From_Location;
			}
			set
			{
				if ((this._From_Location != value))
				{
					this.OnFrom_LocationChanging(value);
					this.SendPropertyChanging();
					this._From_Location = value;
					this.SendPropertyChanged("From_Location");
					this.OnFrom_LocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info", DbType="VarChar(255)")]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Galenskap", DbType="Int")]
		public System.Nullable<int> Galenskap
		{
			get
			{
				return this._Galenskap;
			}
			set
			{
				if ((this._Galenskap != value))
				{
					this.OnGalenskapChanging(value);
					this.SendPropertyChanging();
					this._Galenskap = value;
					this.SendPropertyChanged("Galenskap");
					this.OnGalenskapChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
